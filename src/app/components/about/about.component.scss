header {
  padding: 2rem;
  border: 2px solid var(--border-color);
  box-shadow: 5px 5px 0 var(--shadow-color);
  background-color: var(--primary-color);
  margin-bottom: 2rem;

  h1 {
    font-size: 3rem;
    margin-bottom: 1rem;
  }

  p {
    font-size: 1.2rem;
  }
}

.about-section {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  gap: 2rem;
  padding: 3rem;
  background-color: var(--bg-card);
  border: var(--border-width) solid var(--border-color);
  box-shadow: var(--shadow-offset) var(--shadow-offset) 0 var(--shadow-color);
  margin-bottom: 3rem;

  h1 {
    margin-bottom: 1rem;
  }

  p {
    line-height: 1.6;
  }
}

// Responsive adjustments
@media (max-width: 768px) {
  .about-section {
    flex-direction: column-reverse;
    text-align: center;
    padding: 2rem;
  }
}

@keyframes blink {
  50% { opacity: 0; }
}

.home-intro {
  min-height: 80vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  padding: 2rem;
  position: relative;
  overflow: hidden;
  margin-bottom: 2rem;

  // Formas geométricas de fundo
  &::before, &::after {
    content: '';
    position: absolute;
    border: var(--border-width) solid var(--black-base);
    z-index: -1;
  }
  &::before { // Círculo
    width: 200px;
    height: 200px;
    border-radius: 50%;
    top: 10%;
    right: 15%;
    border-color: var(--secondary-color);
  }
  &::after { // Quadrada
    width: 100px;
    height: 100px;
    bottom: 15%;
    left: 20%;
    border-color: var(--accent-color);
  }
}

.intro-block {
  background: var(--bg-main);
  padding: 0.5rem 1rem;
}

.greeting {
  h1 {
    font-size: 5rem;
    line-height: 1;
  }
  span {
    font-size: 1.5rem;
    font-family: 'Bebas Neue', sans-serif;
  }
}

.role {
  margin: 1rem 0;
  .dynamic-title {
    font-size: 3rem;
    color: var(--primary-color);
    text-shadow: 3px 3px 0 var(--black-base);
  }
}

.tagline {
  min-height: 2rem;
  margin-top: 1rem;
}

.pre {
  display: flex;
  flex-direction: row;
  align-items: center;
  text-wrap: nowrap;
  white-space: pre;
  background-color: transparent;
  overflow: hidden;
  box-sizing: border-box;
  font-size: 1.25rem;
  font-family: var(--font-monospace);
  color: var(--text-color);
}

.pre code:first-child {
  color: var(--support2);
}

.cmd {
  height: 1.5rem;
  position: relative;
  display: flex;
  align-items: center;
  flex-direction: row;
  color: var(--accent-color-light);
}

.cmd::before {
  content: attr(data-text);
  position: relative;
  display: block;
  white-space: nowrap;
  overflow: hidden;
  background-color: transparent;
  animation: typing 3.5s steps(30, end) 1s forwards;
  width: 0;
}

.cmd::after {
  content: "";
  position: absolute;
  right: 0;
  display: block;
  height: 100%;
  width: 2px;
  background-color: var(--accent-color-light);
  animation: blink 1s step-end infinite;
  opacity: 1;
}

@keyframes typing {
  from { width: 0 }
  to { width: 100% }
}

@keyframes blink {
  from, to { opacity: 1 }
  50% { opacity: 0 }
}

// Estilos para o container do novo botão
.about-replacement {
  display: flex;
  justify-content: center;
  align-items: center;
}

// Estilos do botão de tema
.theme-toggle-button {
  display: inline-flex;
  align-items: center;
  gap: 1rem;
  background-color: var(--theme-toggle-bg);
  color: var(--theme-toggle-text);
  border: var(--border-width) solid var(--border-color);
  box-shadow: var(--shadow-offset) var(--shadow-offset) 0 var(--shadow-color);
  padding: 1rem 2rem;
  font-family: var(--font-display);
  font-size: 1.5rem;
  cursor: pointer;
  transition: all 0.2s ease-out;

  .button-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background-color: var(--theme-toggle-icon-bg);
    color: var(--theme-toggle-icon-text);
    border: var(--border-width) solid var(--border-color);
    transition: background-color 0.2s ease-out;
  }

  &:hover {
    background-color: var(--theme-toggle-hover-bg);
    color: var(--theme-toggle-hover-text);
    box-shadow: var(--shadow-xs) var(--shadow-xs) 0 var(--shadow-color);
    transform: translate(calc(var(--shadow-offset) - var(--shadow-xs)), calc(var(--shadow-offset) - var(--shadow-xs)));
    
    .button-icon {
      background-color: var(--theme-toggle-hover-icon-bg);
      color: var(--theme-toggle-hover-icon-text);
    }
  }
} 